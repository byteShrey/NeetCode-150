
// Hashing method - Works in O(n)

class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> hm = new HashMap<>();

        for(int i=0;i<nums.length;i++){
            int comp = target-nums[i];

            if(hm.containsKey(comp)){
                return new int []{hm.get(comp),i};
            }
            hm.put(nums[i],i);
        }

        return new int[]{-1,-1};
    }
}
------------------------------------------------------------------------------------------------------------------------------------------------------------------
// Two pointers method - Works in O(n^2) 

class Solution {
    public int[] twoSum(int[] nums, int target) {
        for(int i=0 ;i<nums.length;i++){
            for(int j=i+1;j<nums.length;j++){
                if(nums[i]+nums[j]==target){
                    return new int[]{i,j};
                }
            }
        }
	return new int []{-1,-1}       
 }
}
