/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public TreeNode invertTree(TreeNode root) {
        // for an empty tree return null
        if(root==null)return null;

        //swap left and right child   
        TreeNode temp = root.left ;
        root.left = root.right;
        root.right =temp;

        //let the recusion swap the left and right subtree
        invertTree(root.left);
        invertTree(root.right);

        // return root of inverted trees
        return root ;

    }
}
