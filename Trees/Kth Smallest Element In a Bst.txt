/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    int count = 0 ;
    int kthsmallest =-1;
    public int kthSmallest(TreeNode root, int k) {
        inOrder(root,k);
        return kthsmallest ;
    }
    // we just perform inorder traversal of the tree and keep the count 
    // if the count reaches the given k then we return its data 
    public void inOrder( TreeNode root ,int key){
        if(root==null) return ;
        inOrder(root.left,key);
        count ++ ;
        if(count==key){
            kthsmallest = root.val;
            return ;
        }

        inOrder(root.right,key);
    }
}
