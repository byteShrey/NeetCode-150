/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */

class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        int level =0;
        rightRecursion(root,result,level);
        return result;
    }
    private void rightRecursion(TreeNode n , List<Integer> result , int level){
        if( n == null) return ;
        
        if( result.size()== level ) result.add(n.val);

        // we will first see if the right side nodes exist and print if they do 
        rightRecursion(n.right,result,level+1);
        rightRecursion(n.left,result,level+1);

    }
}
